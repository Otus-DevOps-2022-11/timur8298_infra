name: Run tests for OTUS homework

on:
  push:
    branches-ignore: main
  pull_request:
    branches-ignore: main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout this repo
      uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}
    - name: Checkout repo with tests
      uses: actions/checkout@v2
      with:
        repository: "express42/otus-homeworks"
        ref: 2022-08
        path: "./otus-homeworks/"

    - name: Run tests
      run: curl https://raw.githubusercontent.com/express42/otus-homeworks/2022-08/run.sh | bash

#Задание с ⭐⭐: 
  packer_check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}

    - name: packer validate app
      run: packer validate -var-file=packer/variables.json.example packer/app.json

    - name: packer validate db
      run: packer validate -var-file=packer/variables.json.example packer/db.json

    - name: packer validate ubuntu16
      run: packer validate -var-file=packer/variables.json.example packer/ubuntu16.json

    - name: packer validate immutable
      run: packer validate -var-file=packer/variables.json.example packer/immutable.json

  ansible_check:
    runs-on: ubuntu-latest

    env:
      ANSIBLE_ROLES_PATH: ansible/roles

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}

    - name: Galaxy Install
      run: |
        ansible-galaxy install -r ansible/environments/stage/requirements.yml

    - name: Run ansible-lint
      uses: ansible/ansible-lint-action@main
      with:
        path: "ansible/playbooks/" 
        Options: -c

  terraform_check:
    runs-on: ubuntu-latest
    env:
      TF_ACTIONS_VERSION: latest
    strategy:
      matrix:
        version: ['prod','stage']

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}

    - name: Terraform - Init
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version:     ${{ env.TF_ACTIONS_VERSION }}
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: 'terraform/${{ matrix.version }}'

    - name: terraform validate prod
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version:     ${{ env.TF_ACTIONS_VERSION }}
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: 'terraform/${{ matrix.version }}'

  tflint_check:
    runs-on: ubuntu-latest
    env:
      TF_ACTIONS_VERSION: latest
    strategy:
      matrix:
        version: ['prod','stage']

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}

    - uses: terraform-linters/setup-tflint@v2
      name: Setup TFLint
      with:
        tflint_version: v0.38.1

    - name: Run TFLint
      run: tflint -f compact terraform/${{ matrix.version}}
